import java.awt.Dimension;
import java.awt.Toolkit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;
import java.io.*;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
/**
 *
 * @author malan
 */
public class FormUtama extends javax.swing.JFrame {

   public FormUtama() {
        initComponents();
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension framesize = getSize();
        setLocation((screenSize.width - framesize.width)/2, (screenSize.height - framesize.height)/2);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelInputDokumen = new javax.swing.JPanel();
        jLabelDocAsli = new javax.swing.JLabel();
        TextFieldDocAsli = new javax.swing.JTextField();
        ButtonCariDocAsli = new javax.swing.JButton();
        jLabelDocUji = new javax.swing.JLabel();
        TextFieldDocUji = new javax.swing.JTextField();
        ButtonCariDocUji = new javax.swing.JButton();
        jLabelKGram = new javax.swing.JLabel();
        ComboBoxKGram = new javax.swing.JComboBox<>();
        ButtonStart = new javax.swing.JButton();
        ButtonReset = new javax.swing.JButton();
        jPanelHasilDeteksi = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        LabelSimilarity = new javax.swing.JLabel();
        LabelNilaiKgram = new javax.swing.JLabel();
        LabelWaktuProses = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        LabelJumKGramSama = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        LabelTingkatKemiripan = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        LabelJumKataOriDocAsli = new javax.swing.JLabel();
        LabelJumKataHasilEkstraksiDocAsli = new javax.swing.JLabel();
        LabelNamaDocAsli = new javax.swing.JLabel();
        LabelJumKGramDocAsli = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        LabelJumKataOriDocUji = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        LabelJumKataHasilEkstraksiDocUji = new javax.swing.JLabel();
        LabelJumKGramDocUji = new javax.swing.JLabel();
        LabelNamaDocUji = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        LabelHighlightDocAsli = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TextAreaHighlightDocAsli = new javax.swing.JTextArea();
        LabelHighlightDocUji = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TextAreaHighlightDocUji = new javax.swing.JTextArea();
        jMenuBar2 = new javax.swing.JMenuBar();
        MenuFile = new javax.swing.JMenu();
        MenuItemSimpan = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        MenuItemExit = new javax.swing.JMenuItem();
        MenuBantuan = new javax.swing.JMenu();
        MenuItemTentang = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Aplikasi Cek Similarity");
        setIconImages(null);

        jPanelInputDokumen.setBorder(javax.swing.BorderFactory.createTitledBorder("Inputan Dokumen"));
        jPanelInputDokumen.setToolTipText("Input Dokumen");

        jLabelDocAsli.setText("Dokumen Asli");

        TextFieldDocAsli.setEditable(false);
        TextFieldDocAsli.setToolTipText("");

        ButtonCariDocAsli.setText("Cari");
        ButtonCariDocAsli.setToolTipText("Input Dokumen Asli");
        ButtonCariDocAsli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCariDocAsliActionPerformed(evt);
            }
        });

        jLabelDocUji.setText("Dokumen Uji");

        TextFieldDocUji.setEditable(false);

        ButtonCariDocUji.setText("Cari");
        ButtonCariDocUji.setToolTipText("Input Dokumen Uji");
        ButtonCariDocUji.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonCariDocUjiActionPerformed(evt);
            }
        });

        jLabelKGram.setText("K-Gram");

        ComboBoxKGram.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5" }));
        ComboBoxKGram.setToolTipText("K-Gram = rangkaian terms dengan panjang K");

        ButtonStart.setText("Start");
        ButtonStart.setToolTipText("Mulai proses deteksi");
        ButtonStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonStartActionPerformed(evt);
            }
        });

        ButtonReset.setText("Reset");
        ButtonReset.setToolTipText("Reset");
        ButtonReset.setEnabled(false);
        ButtonReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelInputDokumenLayout = new javax.swing.GroupLayout(jPanelInputDokumen);
        jPanelInputDokumen.setLayout(jPanelInputDokumenLayout);
        jPanelInputDokumenLayout.setHorizontalGroup(
            jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputDokumenLayout.createSequentialGroup()
                .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelDocAsli)
                    .addComponent(TextFieldDocAsli, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ButtonCariDocAsli)
                    .addGroup(jPanelInputDokumenLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxKGram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabelKGram)))
                    .addGroup(jPanelInputDokumenLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(ButtonStart)))
                .addGap(6, 6, 6)
                .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelInputDokumenLayout.createSequentialGroup()
                        .addComponent(ButtonReset)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelInputDokumenLayout.createSequentialGroup()
                        .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelDocUji)
                            .addComponent(ButtonCariDocUji)
                            .addComponent(TextFieldDocUji, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 54, Short.MAX_VALUE))))
        );
        jPanelInputDokumenLayout.setVerticalGroup(
            jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelInputDokumenLayout.createSequentialGroup()
                .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelDocAsli)
                    .addComponent(jLabelDocUji))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCariDocAsli)
                    .addComponent(ButtonCariDocUji))
                .addGap(9, 9, 9)
                .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextFieldDocAsli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextFieldDocUji, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabelKGram)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(ComboBoxKGram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addGroup(jPanelInputDokumenLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonStart)
                    .addComponent(ButtonReset))
                .addGap(0, 13, Short.MAX_VALUE))
        );

        jPanelHasilDeteksi.setBorder(javax.swing.BorderFactory.createTitledBorder("Hasil Deteksi"));
        jPanelHasilDeteksi.setToolTipText("Informasi Hasil Pendeteksian");

        jLabel1.setText("K-Gram");

        jLabel3.setText("Persentase Kemiripan");

        jLabel4.setText("Waktu Proses");

        LabelSimilarity.setText(":");

        LabelNilaiKgram.setText(":");

        LabelWaktuProses.setText(":");

        jLabel6.setText("Jum Pattern sama");

        LabelJumKGramSama.setText(":");

        jLabel2.setText("Tingkat Kemiripan");

        LabelTingkatKemiripan.setText(":");

        javax.swing.GroupLayout jPanelHasilDeteksiLayout = new javax.swing.GroupLayout(jPanelHasilDeteksi);
        jPanelHasilDeteksi.setLayout(jPanelHasilDeteksiLayout);
        jPanelHasilDeteksiLayout.setHorizontalGroup(
            jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHasilDeteksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelTingkatKemiripan)
                    .addComponent(LabelJumKGramSama)
                    .addComponent(LabelWaktuProses)
                    .addComponent(LabelNilaiKgram)
                    .addComponent(LabelSimilarity))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        jPanelHasilDeteksiLayout.setVerticalGroup(
            jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelHasilDeteksiLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(LabelNilaiKgram))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(LabelSimilarity))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(LabelWaktuProses))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(LabelJumKGramSama))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelHasilDeteksiLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(LabelTingkatKemiripan))
                .addContainerGap(68, Short.MAX_VALUE))
        );

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Info Dokumen"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Dokumen Asli"));
        jPanel2.setToolTipText("Informasi Dokumen Asli\"");

        jLabel9.setText("Jumlah kata sebelum di proses");

        jLabel10.setText("Jumlah kata setelah di proses");

        jLabel11.setText("Jumlah Pattern");

        jLabel12.setText("Nama Dokumen");

        LabelJumKataOriDocAsli.setText(":");

        LabelJumKataHasilEkstraksiDocAsli.setText(":");

        LabelNamaDocAsli.setText(":");

        LabelJumKGramDocAsli.setText(":");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelJumKataOriDocAsli))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel12)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelJumKGramDocAsli)
                            .addComponent(LabelNamaDocAsli)
                            .addComponent(LabelJumKataHasilEkstraksiDocAsli))))
                .addGap(0, 72, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(LabelJumKataOriDocAsli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(LabelJumKataHasilEkstraksiDocAsli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(LabelJumKGramDocAsli))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(LabelNamaDocAsli))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Dokumen Uji"));

        jLabel17.setText("Nama Dokumen");

        LabelJumKataOriDocUji.setText(":");

        jLabel19.setText("Jumlah kata sebelum di proses");

        jLabel20.setText("Jumlah kata setelah di proses");

        jLabel21.setText("Jumlah Pattern");

        LabelJumKataHasilEkstraksiDocUji.setText(":");

        LabelJumKGramDocUji.setText(":");

        LabelNamaDocUji.setText(":");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(LabelJumKataOriDocUji))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelNamaDocUji)
                            .addComponent(LabelJumKGramDocUji)
                            .addComponent(LabelJumKataHasilEkstraksiDocUji))))
                .addGap(0, 69, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(LabelJumKataOriDocUji))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel20)
                    .addComponent(LabelJumKataHasilEkstraksiDocUji))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(LabelJumKGramDocUji))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(LabelNamaDocUji))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Highlight Pattern"));
        jPanel4.setEnabled(false);

        LabelHighlightDocAsli.setText("Dokumen Asli");

        TextAreaHighlightDocAsli.setEditable(false);
        TextAreaHighlightDocAsli.setColumns(20);
        TextAreaHighlightDocAsli.setRows(5);
        jScrollPane1.setViewportView(TextAreaHighlightDocAsli);

        LabelHighlightDocUji.setText("Dokumen Uji");

        TextAreaHighlightDocUji.setEditable(false);
        TextAreaHighlightDocUji.setColumns(20);
        TextAreaHighlightDocUji.setRows(5);
        TextAreaHighlightDocUji.setEnabled(false);
        jScrollPane2.setViewportView(TextAreaHighlightDocUji);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(LabelHighlightDocAsli)
                    .addComponent(LabelHighlightDocUji)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 995, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelHighlightDocAsli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelHighlightDocUji)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );

        MenuFile.setText("File");

        MenuItemSimpan.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemSimpan.setText("Simpan");
        MenuItemSimpan.setToolTipText("Simpan");
        MenuItemSimpan.setName(""); // NOI18N
        MenuItemSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemSimpanActionPerformed(evt);
            }
        });
        MenuFile.add(MenuItemSimpan);
        MenuFile.add(jSeparator1);

        MenuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        MenuItemExit.setMnemonic('X');
        MenuItemExit.setText("Keluar");
        MenuItemExit.setToolTipText("Keluar");
        MenuItemExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemExitActionPerformed(evt);
            }
        });
        MenuFile.add(MenuItemExit);

        jMenuBar2.add(MenuFile);

        MenuBantuan.setText("Bantuan");

        MenuItemTentang.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_T, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemTentang.setText("Tentang");
        MenuItemTentang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemTentangActionPerformed(evt);
            }
        });
        MenuBantuan.add(MenuItemTentang);

        jMenuItem1.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_L, java.awt.event.InputEvent.CTRL_MASK));
        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        MenuBantuan.add(jMenuItem1);

        jMenuBar2.add(MenuBantuan);

        setJMenuBar(jMenuBar2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelInputDokumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelHasilDeteksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelInputDokumen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanelHasilDeteksi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getAccessibleContext().setAccessibleDescription("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonCariDocAsliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCariDocAsliActionPerformed
        OpenFile openFileDocAsli = new OpenFile();
    
        namaDocAsli = openFileDocAsli.namaDoc;
        sumberDocAsli = openFileDocAsli.sumberDoc;

        TextFieldDocAsli.setText(namaDocAsli);
        ButtonCariDocAsli.setEnabled(true);
    }//GEN-LAST:event_ButtonCariDocAsliActionPerformed

    private void ButtonCariDocUjiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonCariDocUjiActionPerformed
        OpenFile openFileDocUji = new OpenFile();
    
        namaDocUji = openFileDocUji.namaDoc;
        sumberDocUji = openFileDocUji.sumberDoc;

        TextFieldDocUji.setText(namaDocUji);
        ButtonCariDocUji.setEnabled(true);
    }//GEN-LAST:event_ButtonCariDocUjiActionPerformed

    private void ButtonStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonStartActionPerformed
         if(TextFieldDocAsli.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Silahkan pilih 'Dokumen Asli' terlebih dahulu","Peringatan",JOptionPane.WARNING_MESSAGE);
    } else if(TextFieldDocUji.getText().isEmpty()) {
        JOptionPane.showMessageDialog(null, "Silahkan pilih 'Dokumen Uji' terlebih dahulu","Peringatan",JOptionPane.WARNING_MESSAGE);
    } else {
        
        
        try {
            /* Membaca isi dokumen dengan memasukan sumberDoc tepat penyimpanan 
             *  Dokumen 1  ke dalam kelas ReadFile
             */
            ReadFile readDocAsli = new ReadFile(sumberDocAsli);               
            isiDocAsli = readDocAsli.isiDoc;
            jumKataDocAsli = readDocAsli.jumKata;       
        } catch (IOException ex) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SAXException ex) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        try {
            /* Membaca isi Dokumen Uji
             *
             */
            ReadFile readDocUji = new ReadFile(sumberDocUji);                
            isiDocUji = readDocUji.isiDoc;
            jumKataDocUji = readDocUji.jumKata;                
        } catch (IOException ex) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ParserConfigurationException ex) {
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);          
        } catch (SAXException ex) {                
            Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
        }                        
        
        /* Exception handling jika Dokumen Asli tidak memiliki isi berupa teks
         * 
         */
        if(isiDocAsli.isEmpty()) {
            JOptionPane.showMessageDialog(null, "'Dokumen Asli' tidak memiliki isi teks untuk di proses\n"
                    + "Proses tidak dapat dilanjutkan, Silahkan pilih kembali 'Dokumen Asli'",
                    "Peringatan",JOptionPane.WARNING_MESSAGE);
            TextFieldDocAsli.setText("");
            ButtonCariDocAsli.setEnabled(true);
        }         
        /* Exception handling jika Dokumen Uji tidak memiliki isi
         * 
         */
        else if(isiDocUji.isEmpty()) {
            JOptionPane.showMessageDialog(null, "'Dokumen Uji' tidak memiliki isi teks untuk diproses\n"
                    + "Proses tidak dapat dilanjutkan, Silahkan pilih kembali 'Dokumen Uji'",
                    "Peringatan",JOptionPane.WARNING_MESSAGE);
            TextFieldDocUji.setText("");
            ButtonCariDocUji.setEnabled(true);
        } else {
            //ButtonStart.setEnabled(false);
        ButtonReset.setEnabled(true);
        MenuItemSimpan.setEnabled(true);
        //ButtonViewHighligh.setEnabled(true);
                try {                    
                       //long start  = Calendar.getInstance().getTimeInMillis();
                       
                    ExtractionDocument ekstraksiDocAsli = new ExtractionDocument(isiDocAsli);
                    hasilEkstraksiDocAsli = ekstraksiDocAsli.hasilEkstraksi;
                    jumKataHasilEkstraksiDocAsli = ekstraksiDocAsli.jumKata;                    
                    
                    ExtractionDocument ekstraksiDocUji = new ExtractionDocument(isiDocUji);
                    hasilEkstraksiDocUji = ekstraksiDocUji.hasilEkstraksi;
                    jumKataHasilEkstraksiDocUji = ekstraksiDocUji.jumKata;
                    
                    kgram = Integer.parseInt(String.valueOf(ComboBoxKGram.getSelectedItem()));
                    
                    RabinKarp rabinKarp = new RabinKarp(hasilEkstraksiDocAsli, hasilEkstraksiDocUji, kgram);
                    jumPatternDocAsli = rabinKarp.jumPatternDocAsli;
                    jumPatternDocUji = rabinKarp.jumPatternDocUji;
                    jumPatternSama = rabinKarp.jumPatternSama;
                    //Mod = rabinKarp.Mod;
                    similarity = rabinKarp.similarity;        
                    patternSama = rabinKarp.patternSama;
                    viewDocAsli = rabinKarp.DocAsli;
                    viewDocUji = rabinKarp.DocUji;
                    
                    //long end = Calendar.getInstance().getTimeInMillis();
                    
                    waktuProses = rabinKarp.waktuProses;
                    
                    /* Tampil Informasi Dokumen Asli */
                    LabelNamaDocAsli.setText(": "+namaDocAsli);
                    LabelJumKataOriDocAsli.setText(": "+Integer.toString(jumKataDocAsli)+" kata");
                    LabelJumKataHasilEkstraksiDocAsli.setText(": "+Integer.toString(jumKataHasilEkstraksiDocAsli)+" kata");
                    LabelJumKGramDocAsli.setText(": "+Integer.toString(jumPatternDocAsli));
                    
                    /* Tampil Informasi Dokumen Uji */
                    LabelNamaDocUji.setText(": "+namaDocUji);
                    LabelJumKataOriDocUji.setText(": "+Integer.toString(jumKataDocUji)+" kata");
                    LabelJumKataHasilEkstraksiDocUji.setText(": "+Integer.toString(jumKataHasilEkstraksiDocUji)+" kata");
                    LabelJumKGramDocUji.setText(": "+Integer.toString(jumPatternDocUji));
                    
                    /*Tampil Informasi hasil deteksi */
                    LabelNilaiKgram.setText(": "+Integer.toString(kgram));
                    LabelJumKGramSama.setText(": "+Integer.toString(jumPatternSama));
                    LabelSimilarity.setText(": "+Double.toString(similarity)+" %");
                    LabelWaktuProses.setText(": "+Long.toString(waktuProses)+" ms");
                    
                    /* Tampil haghlight */
                    TextAreaHighlightDocAsli.setLineWrap(true);   
                    TextAreaHighlightDocAsli.setWrapStyleWord(true);
                    //TextAreaHighlightDocAsli.setText(viewDocAsli);
                    TextAreaHighlightDocAsli.setText(isiDocAsli.toLowerCase());
                    
                    TextAreaHighlightDocUji.setLineWrap(true);   
                    TextAreaHighlightDocUji.setWrapStyleWord(true);
                    //TextAreaHighlightDocUji.setText(viewDocUji);
                    TextAreaHighlightDocUji.setText(isiDocUji.toLowerCase());
                    
                    if(similarity==100){
                        //LabelTingkatKemiripan.setText(": Plagiarisme");
                        tingkatKemiripan = "Plagiarisme";
                    }
                    else if((similarity >1) && (similarity <15)){
                        //LabelTingkatKemiripan.setText(": Rendah");
                        tingkatKemiripan = "Rendah";
                    }
                    else if((similarity >=15)&&(similarity <=50)){
                        //LabelTingkatKemiripan.setText(": Sedang");
                        tingkatKemiripan = "Sedang";
                    }
                    else if((similarity >50) && (similarity <=99)){
                        //LabelTingkatKemiripan.setText(": Mendekati Plagiarisme");
                        tingkatKemiripan = "Mendekati Plagiarisme";
                    }
                    else{
                        //LabelTingkatKemiripan.setText(": Tidak ada kemiripan");
                        tingkatKemiripan = "Tidak ada kemiripan";
                    }
                    
                    LabelTingkatKemiripan.setText(": "+tingkatKemiripan);
                        
                    
                    for (int i=0; i<patternSama.length; i++){
                        if(patternSama[i] != null){
                            //System.out.println(i+" - "+patternSama[i]);
                            HighlightPattern highlightPatternDocAsli = new HighlightPattern(TextAreaHighlightDocAsli,patternSama[i]);
                            HighlightPattern highlightPatternDocUji = new HighlightPattern(TextAreaHighlightDocUji,patternSama[i]);
                        }
                    }
                    
                } catch (IOException ex) {
                    Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
        }
    }
    }//GEN-LAST:event_ButtonStartActionPerformed

    private void ButtonResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonResetActionPerformed
         if(JOptionPane.showConfirmDialog(rootPane, "Hasil sebelumnya akan dibuang. "
            + "Anda yakin akan memulai pendeteksian ulang?","Konfirmasi",
            JOptionPane.OK_CANCEL_OPTION) == JOptionPane.OK_OPTION) {
        
        /* Membersihkan kembali Teks area Dokumen asli & Dokumen Uji kembali ke 
         * keadaan awal */
        TextFieldDocAsli.setText("");
        TextFieldDocUji.setText("");
        
        /* menset button kembali ke keadaan awal */
        ButtonCariDocAsli.setEnabled(true);
        ButtonCariDocUji.setEnabled(true);
        ButtonStart.setEnabled(true);
        ButtonReset.setEnabled(false);
        MenuItemSimpan.setEnabled(false);
        //ButtonViewHighligh.setEnabled(false);
        
        /* menset nilai K-gram ke keadaan awal*/
        ComboBoxKGram.setSelectedItem("1");
        
        /* Menset informasi Dokuemn Asli ke keadaan awal */
        LabelNamaDocAsli.setText(":");
        LabelJumKataOriDocAsli.setText(":");
        LabelJumKataHasilEkstraksiDocAsli.setText(":");
        LabelJumKGramDocAsli.setText(":");
        
        /* Menset informasi Dokuemn Uji ke keadaan awal */
        LabelNamaDocUji.setText(":");
        LabelJumKataOriDocUji.setText(":");
        LabelJumKataHasilEkstraksiDocUji.setText(":");
        LabelJumKGramDocUji.setText(":");
        
        /* Menset informasi Hasil Deteksi ke keadaan awal */
        LabelNilaiKgram.setText(":");
        LabelJumKGramSama.setText(":");
        LabelSimilarity.setText(":");
        LabelWaktuProses.setText(":");
        
        /* Menset TextArea Dokuemn Asli dan Dokumen Uji ke kondisi awal */
        
        TextAreaHighlightDocAsli.setText("");
        TextAreaHighlightDocUji.setText("");
    } 

    }//GEN-LAST:event_ButtonResetActionPerformed

    private void MenuItemSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemSimpanActionPerformed
        JFileChooser fileChooser = new JFileChooser();
    int status = fileChooser.showSaveDialog(null);
    if(status == JFileChooser.APPROVE_OPTION) {
            String filePdf = fileChooser.getSelectedFile()+".pdf";
            Document document = new Document(PageSize.A4);
            Paragraph judul = new Paragraph("Informasi Hasil Deteksi Plagiarisme\n\n\n", new Font(Font.FontFamily.TIMES_ROMAN, 14, Font.BOLD));
            Paragraph jarak = new Paragraph("\n\n");
                    
        judul.setAlignment(Element.ALIGN_CENTER);
            try {
                try {
                    PdfWriter.getInstance(document, new FileOutputStream(filePdf));
                } catch (FileNotFoundException ex) {
                    Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
                }
            } catch (DocumentException ex) {
                Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        document.open();
        
        /* Tabel Persentase Kemiripan 
         */
        PdfPTable tableKemiripan=new PdfPTable(2);
        PdfPCell cellJudulTabelKemiripan = new PdfPCell (new Paragraph ("Informasi Kemiripan"));
        cellJudulTabelKemiripan.setColspan (2);
        cellJudulTabelKemiripan.setHorizontalAlignment (Element.ALIGN_CENTER);
        cellJudulTabelKemiripan.setBackgroundColor(BaseColor.LIGHT_GRAY);
        cellJudulTabelKemiripan.setPadding (8.0f);
        tableKemiripan.addCell (cellJudulTabelKemiripan);
        
        tableKemiripan.addCell("Doc. Asli");
        tableKemiripan.addCell(namaDocAsli);
        
        tableKemiripan.addCell("Doc. Uji");
        tableKemiripan.addCell(namaDocUji);
        
        tableKemiripan.addCell("K-Gram");
        tableKemiripan.addCell(Integer.toString(kgram));
        
        tableKemiripan.addCell("Jum. Pattern Sama");
        tableKemiripan.addCell(Integer.toString(jumPatternSama));
        
        tableKemiripan.addCell("Persentase Kemiripan");
        tableKemiripan.addCell(Double.toString(similarity)+" %");
        
        tableKemiripan.addCell("Tingkat Kemiripan");
        tableKemiripan.addCell(tingkatKemiripan);
        
        tableKemiripan.addCell("Waktu Proses");
        tableKemiripan.addCell(Long.toString(waktuProses)+" ms");
        
        
        PdfPTable tableInfoDoc = new PdfPTable(3);
        PdfPCell cellJudulInfoDocAsli = new PdfPCell (new Paragraph ("Informasi Dokumen"));
        cellJudulInfoDocAsli.setColspan (3);
        cellJudulInfoDocAsli.setHorizontalAlignment (Element.ALIGN_CENTER);
        cellJudulInfoDocAsli.setBackgroundColor(BaseColor.LIGHT_GRAY);
        cellJudulInfoDocAsli.setPadding (8.0f);
        tableInfoDoc.addCell(cellJudulInfoDocAsli);
        
        tableInfoDoc.addCell(" ");
        tableInfoDoc.addCell("Doc. Asli");
        tableInfoDoc.addCell("Doc. Uji");
        
        tableInfoDoc.addCell("Nama Dokumen");
        tableInfoDoc.addCell(namaDocAsli);
        tableInfoDoc.addCell(namaDocUji);
        
        tableInfoDoc.addCell("Jum. Kata Sebelum di Proses");
        tableInfoDoc.addCell(Integer.toString(jumKataDocAsli)+" Kata");
        tableInfoDoc.addCell(Integer.toString(jumKataDocUji)+" Kata");
        
        tableInfoDoc.addCell("Jum. Kata Setelah di Proses");
        tableInfoDoc.addCell(Integer.toString(jumKataHasilEkstraksiDocAsli)+" Kata");
        tableInfoDoc.addCell(Integer.toString(jumKataHasilEkstraksiDocUji)+" Kata");
        
        tableInfoDoc.addCell("Jum. Pattern");
        tableInfoDoc.addCell(Integer.toString(jumPatternDocAsli));
        tableInfoDoc.addCell(Integer.toString(jumPatternDocAsli));
        
            try {
                document.add(judul);
                document.add(tableKemiripan);
                document.add(jarak);
                document.add(tableInfoDoc);
                document.close();
            } catch (DocumentException ex) {
                Logger.getLogger(FormUtama.class.getName()).log(Level.SEVERE, null, ex);
            }
        
        }
        else if(status == JFileChooser.CANCEL_OPTION) {
        }
    }//GEN-LAST:event_MenuItemSimpanActionPerformed

    private void MenuItemExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemExitActionPerformed
        int exit = JOptionPane.showConfirmDialog(rootPane, "Apakah anda yakin akan menutup Aplikasi",
            "Konfirmasi",
            JOptionPane.OK_CANCEL_OPTION);
    if(exit == JOptionPane.OK_OPTION){
        System.exit(0);
    }
    }//GEN-LAST:event_MenuItemExitActionPerformed

    private void MenuItemTentangActionPerformed(java.awt.event.ActionEvent evt) {                                                
        final HowToDialog howToDialog = new HowToDialog(new javax.swing.JFrame(), true);
        howToDialog.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                howToDialog.closeHowToDialog();
            }
        });

        howToDialog.setVisible(true);
        }                                

        /**
        * @param args the command line arguments
        */
        public static void main(String args[]) {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                UIManager.setLookAndFeel("com.birosoft.liquid.LiquidLookAndFeel");
            } catch(Exception e){
                System.out.println("Error setting Liquid LAF: " + e);
            }
            //</editor-fold>

            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {

                @Override
                public void run() {
                    new FormUtama().setVisible(true);
                }
            });
    }                                               

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        About menu = new About();
        menu.setVisible(true);
    }//GEN-LAST:event_jMenuItem1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCariDocAsli;
    private javax.swing.JButton ButtonCariDocUji;
    private javax.swing.JButton ButtonReset;
    private javax.swing.JButton ButtonStart;
    private javax.swing.JComboBox<String> ComboBoxKGram;
    private javax.swing.JLabel LabelHighlightDocAsli;
    private javax.swing.JLabel LabelHighlightDocUji;
    private javax.swing.JLabel LabelJumKGramDocAsli;
    private javax.swing.JLabel LabelJumKGramDocUji;
    private javax.swing.JLabel LabelJumKGramSama;
    private javax.swing.JLabel LabelJumKataHasilEkstraksiDocAsli;
    private javax.swing.JLabel LabelJumKataHasilEkstraksiDocUji;
    private javax.swing.JLabel LabelJumKataOriDocAsli;
    private javax.swing.JLabel LabelJumKataOriDocUji;
    private javax.swing.JLabel LabelNamaDocAsli;
    private javax.swing.JLabel LabelNamaDocUji;
    private javax.swing.JLabel LabelNilaiKgram;
    private javax.swing.JLabel LabelSimilarity;
    private javax.swing.JLabel LabelTingkatKemiripan;
    private javax.swing.JLabel LabelWaktuProses;
    private javax.swing.JMenu MenuBantuan;
    private javax.swing.JMenu MenuFile;
    private javax.swing.JMenuItem MenuItemExit;
    private javax.swing.JMenuItem MenuItemSimpan;
    private javax.swing.JMenuItem MenuItemTentang;
    private javax.swing.JTextArea TextAreaHighlightDocAsli;
    private javax.swing.JTextArea TextAreaHighlightDocUji;
    private javax.swing.JTextField TextFieldDocAsli;
    private javax.swing.JTextField TextFieldDocUji;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelDocAsli;
    private javax.swing.JLabel jLabelDocUji;
    private javax.swing.JLabel jLabelKGram;
    private javax.swing.JMenuBar jMenuBar2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanelHasilDeteksi;
    private javax.swing.JPanel jPanelInputDokumen;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    // End of variables declaration//GEN-END:variables
    int kgram;
    int jumKataDocAsli;
    int jumKataDocUji;
    int jumKataHasilEkstraksiDocAsli;
    int jumKataHasilEkstraksiDocUji;    
    int jumPatternDocAsli;
    int jumPatternDocUji;
    int jumPatternSama;
    int Mod;
    
    double similarity;
    
    long waktuProses;
    
    String namaDocAsli;
    String namaDocUji;    
    String sumberDocAsli;
    String sumberDocUji;       
    String isiDocAsli;
    String isiDocUji;     
    String hasilEkstraksiDocAsli;
    String hasilEkstraksiDocUji;    
    String viewDocAsli;
    String viewDocUji;
    String tingkatKemiripan;
    String[] patternSama;
}